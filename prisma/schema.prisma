// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  role         Role
  createdAt    DateTime @default(now())
  votes        Vote[]
  inputAnswers InputAnswer[]
}

enum Role {
  PRIVATE_PERSON
  INDIVIDUAL_ENTREPRENEUR
  COMPANY_EMPLOYEE
}

model Task {
  id          Int       @id @default(autoincrement())
  creatorId   Int
  label       String    @unique
  description String  
  options     Option[]  
  inputs      Input[]  
  openCount   Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Option {
  id          Int       @id @default(autoincrement())
  taskId      Int       
  task        Task      @relation(fields: [taskId], references: [id])
  label       String   
  description String? 
  votes       Vote[]    
}

model Vote {
  id        Int       @id @default(autoincrement())
  optionId  Int       
  option    Option    @relation(fields: [optionId], references: [id])
  userId    Int       
  reason    String?  
  createdAt DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id])
}

model Input {
  id        Int       @id @default(autoincrement())
  taskId    Int       
  task      Task      @relation(fields: [taskId], references: [id])
  label     String   
  answers   InputAnswer[]
  createdAt DateTime  @default(now())
}

model InputAnswer {
  id      Int    @id @default(autoincrement())
  inputId Int
  input   Input  @relation(fields: [inputId], references: [id])
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
  value   String
}